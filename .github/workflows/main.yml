name: Deploy GCP Resources

on:
  push:
    branches:
      - main

jobs:
  deploy:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout Code
        uses: actions/checkout@v3

      - name: Set up Terraform
        uses: hashicorp/setup-terraform@v2
        with:
          terraform_version: 1.10.5

      - name: Authenticate to Google Cloud
        uses: google-github-actions/auth@v1
        with:
          credentials_json: '${{ secrets.GCP_CREDENTIALS }}'

      - name: Push Docker image to GCR
        uses: RafikFarhad/push-to-gcr-github-action@v5-rc1
        with:
          registry: gcr.io
          project_id: ${{ secrets.TF_VAR_project_id }}
          image_name: demo-portal
          image_tag: latest
          dockerfile: Dockerfile
          context: .

      - name: Initialize Terraform
        env:
          TF_VAR_project_id: ${{ secrets.TF_VAR_project_id }}
          TF_VAR_region: ${{ secrets.TF_VAR_region }}
          TF_VAR_sa_display_name: ${{ secrets.TF_VAR_sa_display_name }}
          TF_VAR_bucket_name: ${{ secrets.TF_VAR_bucket_name }}
          TF_VAR_demo_portal_image_url: "gcr.io/${{ secrets.TF_VAR_project_id }}/demo-portal:latest"
          TF_VAR_grafana_admin_password: ${{ secrets.TF_VAR_grafana_admin_password }}
        run: terraform init

      - name: Terraform Format Check
        run: terraform fmt -check

      - name: Terraform Validate
        run: terraform validate

      - name: Run tfsec Security Scan
        run: |
          curl -s https://raw.githubusercontent.com/aquasecurity/tfsec/master/scripts/install_linux.sh | bash
          tfsec . --soft-fail

      - name: Run Checkov Security Scan
        run: |
          pip install checkov
          checkov -d . --quiet || true

      - name: Plan Terraform Changes
        env:
          TF_VAR_project_id: ${{ secrets.TF_VAR_project_id }}
          TF_VAR_region: ${{ secrets.TF_VAR_region }}
          TF_VAR_sa_display_name: ${{ secrets.TF_VAR_sa_display_name }}
          TF_VAR_bucket_name: ${{ secrets.TF_VAR_bucket_name }}
          TF_VAR_demo_portal_image_url: "gcr.io/${{ secrets.TF_VAR_project_id }}/demo-portal:latest"
          TF_VAR_grafana_admin_password: ${{ secrets.TF_VAR_grafana_admin_password }}
        run: terraform plan

      - name: Apply Terraform Changes
        if: github.ref == 'refs/heads/main'
        env:
          TF_VAR_project_id: ${{ secrets.TF_VAR_project_id }}
          TF_VAR_region: ${{ secrets.TF_VAR_region }}
          TF_VAR_sa_display_name: ${{ secrets.TF_VAR_sa_display_name }}
          TF_VAR_bucket_name: ${{ secrets.TF_VAR_bucket_name }}
          TF_VAR_demo_portal_image_url: "gcr.io/${{ secrets.TF_VAR_project_id }}/demo-portal:latest"
          TF_VAR_grafana_admin_password: ${{ secrets.TF_VAR_grafana_admin_password }}
        run: terraform apply -auto-approve



